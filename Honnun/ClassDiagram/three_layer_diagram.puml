@startuml

class MainMenuUI  #B4a7e5 {
    LogicWrapper
    display_mainmenu()
    select_login()
}
class PostLoginMenuUI #B4a7e5 {
    LogicWrapper
    display_hostmenu()
    select()
}
class LeaderboardUI #B4a7e5 {
    LogicWrapper
    display()
    select()
    get_leaderboard()
}
class TeamsUI #B4a7e5{
    LogicWrapper
    display()
    select()
    edit_teams()
    create_team()
    get_team()
}
class UnplayedMatches #B4a7e5{
    LogicWrapper
    display()
    select()
    get_unplayed_matches()
}
class ResultsUI #B4a7e5{
    LogicWrapper
    display()
    select()
    get_results()
}
class DivisionTableUI #B4a7e5{
    LogicWrapper
    display()
    select()
    get_division_table()
}
class ClubsUI #B4a7e5{
    LogicWrapper
    display()
    select()
    create_new_club()
    edit_club()
    get_clubs()
}
class DivisionUI #B4a7e5{
    LogicWrapper
    display()
    select()
    create_division()
    add_team_to_division()
    edit_division()
    get_divison()
}
class MatchesUI #B4a7e5{
    LogicWrapper
    display()
    select()
    edit_match()
    add_match()
    view_scoreboard()
    get_matches()
}
class LoginMenuUI #B4a7e5{
    LogicWrapper
    display()
    select()
}

class PlayerUI #B4a7e5 {
    LogicWrapper
    display()
    select()
    remove_player()
    add_player()
    change_captain()
    get_players()
    get_player()
}

class ScoreboardUI #B4a7e5 {
    LogicWrapper
    display_scoreboard()
    add_scoreboard()
    edit_scoreboard()
    get_scoreboard()
}

class PlayerLL #EB937F{
    DataWrapper
    players[]: PlayerMdl

    -update_players()
    -write_players()

    get_player(player_id)
    get_all_players()
    get_players_by_club("club_id")
    ssn_exists(ssn)

    create_player(PlayerMdl)
}

class MatchLL #EB937F{
    DataWrapper
    matches[]: MatchMdl

    -count_qps(qp_str)
    -get_highest_shots(qp_str)
    -update_matches()
    -write_matches()
    -find_match(match_id)
    -date_obj_to_str(date_obj)
    -date_str_to_onbj(date_str)
    -get_last_n_matches(qp_ls, last_n_matches)
    
    get_all_player_qp_strings(player_id)
    get_player_total_qps_by_division(player_id, division_id)
    get_player_highest_shots_by_division(player_id, division_id)
    get_all_matches()
    get_match(match_id)
    get_matches_by_division(division_id)
    get_upcoming_mathes()
    get_concluded_matches()
    get_date(match_id)
    get_start_and_end_date(match_id)
    get_teams(match_id[])

    generate_matches(team_id[], division_id, start_date, rest_days, rounds)
    create_match(MatchMld)
    set_date(match_id, new_date)
    set_results(match_id, results, qps, home_players, away_players)
}

class DivisionLL #EB937F {
    DataWrapper
    divisions[]: DivisionMld
    
    -update_divisions()
    -write_divisions()
    -find_division(division_id)

    get_division(division_id)
    get_all_divisions()
    get_match_ids(division_id)
    get_team_ids(division_id)
    name_exists(division_name)

    create_division(DivisionMld)
    add_team(team_id, division_id)
    add_matches(match_ids[], division_id)
    set_dates(start_date, end_date, division_id)
}

class TeamLL #EB937F{
    DataWrapper
    teams[]: TeamMdl

    -update_teams()
    -write_teams()
    -find_team(team_id)

    get_all_teams()
    get_team(team_id)
    get_captain(team_id)
    get_players(team_id)
    get_teams_by_club(club_id)
    team_name_exists(name, team_id)

    create_team(TeamMdl)
    add_player(player_id, team_id)
    promote_to_captain(player_id, team_id)
}

class ClubLL #EB937F {
    DataWrapper
    clubs[]: ClubMdl

    -update_clubs()
    -write_clubs()
    -find_club(club_id)

    get_club(club_id)
    get_all_clubs()
    name_exists(name)
    get_teams(club_id)

    create_club()
    add_team(team_id, club_id)
}
class MasterLL #EB937F {
    MatchLL
    DivisionLL
    TeamLL
    PlayerLL
    ClubLL
    DataWrapper
}
class LogicWrapper{
    DataWrapper
    PlayerLL
    TeamLL
    ClubLL
    DivisionLL
    MatchLL
    MasterLL
    allexposedLLfunctions()
}



LogicWrapper -- TeamLL
LogicWrapper -- PlayerLL
LogicWrapper -- ClubLL
LogicWrapper -- DivisionLL
LogicWrapper -- MatchLL

MainMenuUI  --  LogicWrapper
LeaderboardUI -- LogicWrapper
ScoreboardUI -- LogicWrapper
DivisionUI -- LogicWrapper
PostLoginMenuUI --  LogicWrapper
UnplayedMatches -- LogicWrapper
TeamsUI -- LogicWrapper
DivisionTableUI -- LogicWrapper
ClubsUI --  LogicWrapper
MatchesUI -- LogicWrapper
LoginMenuUI -- LogicWrapper
ResultsUI -- LogicWrapper
PlayerUI-- LogicWrapper



PlayerLL -- DataWrapper 
TeamLL -- DataWrapper 
ClubLL -- DataWrapper 
DivisionLL -- DataWrapper 
MatchLL -- DataWrapper 

/'
Data layer
'/
class DataWrapper{
    directory
    MatchIO
    PlayerIO
    DivisionIO
    TeamIO
    PlayerIO
    allexposedIOfunctions()
}

class PlayerIO #ADD1b2{
    filename
    get_players_from_file()
    write_players_to_file()

}
class MatchIO #ADD1b2{
    filename
    get_matches_from_file()
    write_matches_to_file()
}
class DivisionIO #ADD1b2{
    filename
    get_divisions_from_file()
    write_divisions_to_file()
}
class TeamIO  #ADD1b2  {
    filename
    get_teams_from_file()
    write_teams_to_file()
}
class ClubIO  #ADD1b2 {
    filename
    get_clubs_from_file()
    write_clubs_to_file()

}

DataWrapper -- MatchIO
DataWrapper -- PersonIO
DataWrapper -- DivisionIO
DataWrapper -- TeamIO
DataWrapper -- ClubIO

@enduml